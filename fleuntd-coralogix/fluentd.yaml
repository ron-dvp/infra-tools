apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd-coralogix-service-account
  namespace: fluentd-coralogix
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd-coralogix-service-account-role
  labels:
    k8s-app: fluentd-coralogix-logger
rules:
  # Allow FluentD-Coralogix-Logger to get 'fluentd-coralogix-account-secrets' secret.
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["fluentd-coralogix-account-secrets"]
  verbs: ["get"]
  # Allow FluentD-Coralogix-Logger to get 'fluentd-coralogix-configs' config map.
- apiGroups: [""]
  resources: ["configmaps"]
  resourceNames: ["fluentd-coralogix-configs"]
  verbs: ["get"]
  # Allow FluentD-Coralogix-Logger to get cluster info.
- apiGroups: [""]
  resources: ["namespaces", "pods"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluentd-coralogix-service-account
  labels:
    k8s-app: fluentd-coralogix-logger
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluentd-coralogix-service-account-role
subjects:
- kind: ServiceAccount
  name: fluentd-coralogix-service-account
  namespace: fluentd-coralogix

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: fluentd-coralogix-configs
  namespace: fluentd-coralogix
  labels:
    k8s-app: fluentd-coralogix-logger
data:
  fluent.conf: |
    @include conf/*.conf
  kubernetes.conf: |
    <system>
      log_level "info"
    </system>

    <source>
      @id fluentd-containers.log
      @type tail
      path /var/log/containers/*.log
      pos_file /var/log/containers.log.pos
      path_key filename
      tag raw.containers.*
      read_from_head true
      <parse>
        @type multi_format
        <pattern>
          format json
          time_key time
          time_format %Y-%m-%dT%H:%M:%S.%NZ
          keep_time_key true
        </pattern>
        <pattern>
          format /^(?<time>.+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/
          time_format %Y-%m-%dT%H:%M:%S.%N%:z
          keep_time_key true
        </pattern>
      </parse>
    </source>

    <match raw.containers.**>
      @id raw.containers
      @type detect_exceptions
      remove_tag_prefix raw
      message log
      stream stream
      multiline_flush_interval 5
      max_bytes 500000
      max_lines 1000
    </match>

    <match kubernetes.var.log.containers.**_kube-system_**>
      @type null
    </match>

    <filter containers.**>
      @type kubernetes_metadata
    </filter>

    <match containers.**>
       @type rewrite_tag_filter
       <rule>
         key $.kubernetes.container_name
         pattern ^(.+)$
         tag $1.${tag}
       </rule>
    </match>

    <match {grafana,fluentd-coralogix}.containers.**>
      @type null
    </match>

    <filter *.containers.**>
      @type parser
      key_name log
      reserve_time true
      reserve_data true
      remove_key_name_field true
      replace_invalid_sequence true
      emit_invalid_record_to_error false
      <parse>
        @type json
        keep_time_key true
      </parse>
    </filter>

    <filter **>
        @type record_transformer
        enable_ruby true
        auto_typecast true
        renew_record true
        <record>
          privateKey "#{ENV['PRIVATE_KEY']}"
          applicationName ${record.dig("kubernetes", "namespace_name")}
          subsystemName ${record.dig("kubernetes", "container_name")}
          computerName ${record.dig("kubernetes", "host")}
          text ${record.to_json}
        </record>
      </filter>

    <match **>
      @type relabel
      @label @DISPATCH
    </match>
    
    <label @DISPATCH>
      <match **>
        @type http
        endpoint "https://#{ENV['ENDPOINT']}/logs/rest/singles"
        headers_from_placeholders {"private_key":"${$.privateKey}"}
        error_response_as_unrecoverable false
        <buffer $.privateKey>
          @type memory
          chunk_limit_size 10MB
          flush_interval 1s
          overflow_action block
          retry_max_times 10
          retry_type periodic
          retry_wait 8
        </buffer>
      </match>
    </label>
    
    02_filters.conf: |-
    01_sources.conf: |-
    03_dispatch.conf: |-
    04_outputs.conf: |-

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd-coralogix-daemonset
  namespace: fluentd-coralogix
  labels:
    k8s-app: fluentd-coralogix-logger
spec:
  selector:
    matchLabels:
      k8s-app: fluentd-coralogix-logger
  template:
    metadata:
      labels:
        k8s-app: fluentd-coralogix-logger
    spec:
      containers:
      - name: fluentd-coralogix
        image: coralogixrepo/coralogix-fluentd-multiarch:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 24224
          protocol: TCP
          name: fluentd
        - containerPort: 9880
          protocol: TCP
          name: http
        - containerPort: 5140
          protocol: UDP
          name: syslog
        - containerPort: 12201
          protocol: UDP
          name: graylog
        envFrom:
        - secretRef:
           name: fluentd-coralogix-account-secrets
        resources:
          limits:
            cpu: 800m
            memory: 900Mi
          requests:
            cpu: 800m
            memory: 900Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: fluentd-config
          mountPath: /fluentd/etc/fluent.conf
          subPath: fluent.conf
        - name: fluentd-config
          mountPath: /fluentd/etc/conf/kubernetes.conf
          subPath: kubernetes.conf
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluentd-config
        configMap:
          name: fluentd-coralogix-configs
      serviceAccount: fluentd-coralogix-service-account
      serviceAccountName: fluentd-coralogix-service-account
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
---
kind: Service
apiVersion: v1
metadata:
  name: fluentd-coralogix-service
  namespace: fluentd-coralogix
  labels:
    k8s-app: fluentd-coralogix-logger
spec:
  selector:
    k8s-app: fluentd-coralogix-logger
  ports:
    - port: 24224
      targetPort: 24224
      protocol: TCP
      name: fluentd
    - port: 9880
      targetPort: 9880
      protocol: TCP
      name: http
    - port: 5140
      targetPort: 5140
      protocol: UDP
      name: syslog
    - port: 12201
      targetPort: 12201
      protocol: UDP
      name: graylog
  clusterIP: None